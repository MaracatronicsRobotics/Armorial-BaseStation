// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_simulation_robot_feedback.proto

#include "ssl_simulation_robot_feedback.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_ssl_5fsimulation_5ferror_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fsimulation_5ferror_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SimulatorError;
}  // namespace protobuf_ssl_5fsimulation_5ferror_2eproto
namespace protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RobotFeedback;
}  // namespace protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto
class RobotFeedbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotFeedback>
      _instance;
} _RobotFeedback_default_instance_;
class RobotControlResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotControlResponse>
      _instance;
} _RobotControlResponse_default_instance_;
namespace protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto {
static void InitDefaultsRobotFeedback() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RobotFeedback_default_instance_;
    new (ptr) ::RobotFeedback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RobotFeedback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RobotFeedback =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRobotFeedback}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsRobotControlResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RobotControlResponse_default_instance_;
    new (ptr) ::RobotControlResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RobotControlResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RobotControlResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRobotControlResponse}, {
      &protobuf_ssl_5fsimulation_5ferror_2eproto::scc_info_SimulatorError.base,
      &protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::scc_info_RobotFeedback.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RobotFeedback.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotControlResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotFeedback, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotFeedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotFeedback, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotFeedback, dribbler_ball_contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotFeedback, custom_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotControlResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotControlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotControlResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RobotControlResponse, feedback_),
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::RobotFeedback)},
  { 11, 18, sizeof(::RobotControlResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RobotFeedback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RobotControlResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ssl_simulation_robot_feedback.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#ssl_simulation_robot_feedback.proto\032\032s"
      "sl_simulation_error.proto\032\031google/protob"
      "uf/any.proto\"`\n\rRobotFeedback\022\n\n\002id\030\001 \002("
      "\r\022\035\n\025dribbler_ball_contact\030\002 \001(\010\022$\n\006cust"
      "om\030\003 \001(\0132\024.google.protobuf.Any\"Y\n\024RobotC"
      "ontrolResponse\022\037\n\006errors\030\001 \003(\0132\017.Simulat"
      "orError\022 \n\010feedback\030\002 \003(\0132\016.RobotFeedbac"
      "kB8Z6github.com/RoboCup-SSL/ssl-simulati"
      "on-protocol/pkg/sim"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ssl_simulation_robot_feedback.proto", &protobuf_RegisterTypes);
  ::protobuf_ssl_5fsimulation_5ferror_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto

// ===================================================================

void RobotFeedback::InitAsDefaultInstance() {
  ::_RobotFeedback_default_instance_._instance.get_mutable()->custom_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RobotFeedback::clear_custom() {
  if (custom_ != NULL) custom_->Clear();
  clear_has_custom();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotFeedback::kIdFieldNumber;
const int RobotFeedback::kDribblerBallContactFieldNumber;
const int RobotFeedback::kCustomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotFeedback::RobotFeedback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::scc_info_RobotFeedback.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RobotFeedback)
}
RobotFeedback::RobotFeedback(const RobotFeedback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_custom()) {
    custom_ = new ::google::protobuf::Any(*from.custom_);
  } else {
    custom_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dribbler_ball_contact_) -
    reinterpret_cast<char*>(&id_)) + sizeof(dribbler_ball_contact_));
  // @@protoc_insertion_point(copy_constructor:RobotFeedback)
}

void RobotFeedback::SharedCtor() {
  ::memset(&custom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dribbler_ball_contact_) -
      reinterpret_cast<char*>(&custom_)) + sizeof(dribbler_ball_contact_));
}

RobotFeedback::~RobotFeedback() {
  // @@protoc_insertion_point(destructor:RobotFeedback)
  SharedDtor();
}

void RobotFeedback::SharedDtor() {
  if (this != internal_default_instance()) delete custom_;
}

void RobotFeedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RobotFeedback::descriptor() {
  ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotFeedback& RobotFeedback::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::scc_info_RobotFeedback.base);
  return *internal_default_instance();
}


void RobotFeedback::Clear() {
// @@protoc_insertion_point(message_clear_start:RobotFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(custom_ != NULL);
    custom_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dribbler_ball_contact_) -
        reinterpret_cast<char*>(&id_)) + sizeof(dribbler_ball_contact_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotFeedback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RobotFeedback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dribbler_ball_contact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dribbler_ball_contact();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dribbler_ball_contact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .google.protobuf.Any custom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RobotFeedback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RobotFeedback)
  return false;
#undef DO_
}

void RobotFeedback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RobotFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional bool dribbler_ball_contact = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->dribbler_ball_contact(), output);
  }

  // optional .google.protobuf.Any custom = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_custom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RobotFeedback)
}

::google::protobuf::uint8* RobotFeedback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RobotFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional bool dribbler_ball_contact = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->dribbler_ball_contact(), target);
  }

  // optional .google.protobuf.Any custom = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_custom(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RobotFeedback)
  return target;
}

size_t RobotFeedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RobotFeedback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  // optional .google.protobuf.Any custom = 3;
  if (has_custom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *custom_);
  }

  // optional bool dribbler_ball_contact = 2;
  if (has_dribbler_ball_contact()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotFeedback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RobotFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotFeedback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotFeedback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RobotFeedback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RobotFeedback)
    MergeFrom(*source);
  }
}

void RobotFeedback::MergeFrom(const RobotFeedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RobotFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_custom()->::google::protobuf::Any::MergeFrom(from.custom());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      dribbler_ball_contact_ = from.dribbler_ball_contact_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotFeedback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RobotFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotFeedback::CopyFrom(const RobotFeedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RobotFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotFeedback::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void RobotFeedback::Swap(RobotFeedback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotFeedback::InternalSwap(RobotFeedback* other) {
  using std::swap;
  swap(custom_, other->custom_);
  swap(id_, other->id_);
  swap(dribbler_ball_contact_, other->dribbler_ball_contact_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RobotFeedback::GetMetadata() const {
  protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotControlResponse::InitAsDefaultInstance() {
}
void RobotControlResponse::clear_errors() {
  errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotControlResponse::kErrorsFieldNumber;
const int RobotControlResponse::kFeedbackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotControlResponse::RobotControlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::scc_info_RobotControlResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RobotControlResponse)
}
RobotControlResponse::RobotControlResponse(const RobotControlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      errors_(from.errors_),
      feedback_(from.feedback_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RobotControlResponse)
}

void RobotControlResponse::SharedCtor() {
}

RobotControlResponse::~RobotControlResponse() {
  // @@protoc_insertion_point(destructor:RobotControlResponse)
  SharedDtor();
}

void RobotControlResponse::SharedDtor() {
}

void RobotControlResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RobotControlResponse::descriptor() {
  ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotControlResponse& RobotControlResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::scc_info_RobotControlResponse.base);
  return *internal_default_instance();
}


void RobotControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RobotControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  feedback_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotControlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RobotControlResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SimulatorError errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RobotFeedback feedback = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feedback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RobotControlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RobotControlResponse)
  return false;
#undef DO_
}

void RobotControlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RobotControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SimulatorError errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // repeated .RobotFeedback feedback = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedback_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->feedback(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RobotControlResponse)
}

::google::protobuf::uint8* RobotControlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RobotControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SimulatorError errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .RobotFeedback feedback = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedback_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->feedback(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RobotControlResponse)
  return target;
}

size_t RobotControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RobotControlResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .SimulatorError errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // repeated .RobotFeedback feedback = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->feedback_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feedback(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotControlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RobotControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotControlResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotControlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RobotControlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RobotControlResponse)
    MergeFrom(*source);
  }
}

void RobotControlResponse::MergeFrom(const RobotControlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RobotControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  feedback_.MergeFrom(from.feedback_);
}

void RobotControlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RobotControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotControlResponse::CopyFrom(const RobotControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RobotControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotControlResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->feedback())) return false;
  return true;
}

void RobotControlResponse::Swap(RobotControlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotControlResponse::InternalSwap(RobotControlResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  CastToBase(&feedback_)->InternalSwap(CastToBase(&other->feedback_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RobotControlResponse::GetMetadata() const {
  protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fsimulation_5frobot_5ffeedback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RobotFeedback* Arena::CreateMaybeMessage< ::RobotFeedback >(Arena* arena) {
  return Arena::CreateInternal< ::RobotFeedback >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RobotControlResponse* Arena::CreateMaybeMessage< ::RobotControlResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RobotControlResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

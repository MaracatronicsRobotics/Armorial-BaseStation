// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_gc_common.proto

#ifndef PROTOBUF_INCLUDED_ssl_5fgc_5fcommon_2eproto
#define PROTOBUF_INCLUDED_ssl_5fgc_5fcommon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgc_5fcommon_2eproto 

namespace protobuf_ssl_5fgc_5fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ssl_5fgc_5fcommon_2eproto
class RobotId;
class RobotIdDefaultTypeInternal;
extern RobotIdDefaultTypeInternal _RobotId_default_instance_;
namespace google {
namespace protobuf {
template<> ::RobotId* Arena::CreateMaybeMessage<::RobotId>(Arena*);
}  // namespace protobuf
}  // namespace google

enum Team {
  UNKNOWN = 0,
  YELLOW = 1,
  BLUE = 2
};
bool Team_IsValid(int value);
const Team Team_MIN = UNKNOWN;
const Team Team_MAX = BLUE;
const int Team_ARRAYSIZE = Team_MAX + 1;

const ::google::protobuf::EnumDescriptor* Team_descriptor();
inline const ::std::string& Team_Name(Team value) {
  return ::google::protobuf::internal::NameOfEnum(
    Team_descriptor(), value);
}
inline bool Team_Parse(
    const ::std::string& name, Team* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Team>(
    Team_descriptor(), name, value);
}
enum Division {
  DIV_UNKNOWN = 0,
  DIV_A = 1,
  DIV_B = 2
};
bool Division_IsValid(int value);
const Division Division_MIN = DIV_UNKNOWN;
const Division Division_MAX = DIV_B;
const int Division_ARRAYSIZE = Division_MAX + 1;

const ::google::protobuf::EnumDescriptor* Division_descriptor();
inline const ::std::string& Division_Name(Division value) {
  return ::google::protobuf::internal::NameOfEnum(
    Division_descriptor(), value);
}
inline bool Division_Parse(
    const ::std::string& name, Division* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Division>(
    Division_descriptor(), name, value);
}
// ===================================================================

class RobotId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RobotId) */ {
 public:
  RobotId();
  virtual ~RobotId();

  RobotId(const RobotId& from);

  inline RobotId& operator=(const RobotId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotId(RobotId&& from) noexcept
    : RobotId() {
    *this = ::std::move(from);
  }

  inline RobotId& operator=(RobotId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotId* internal_default_instance() {
    return reinterpret_cast<const RobotId*>(
               &_RobotId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RobotId* other);
  friend void swap(RobotId& a, RobotId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotId* New() const final {
    return CreateMaybeMessage<RobotId>(NULL);
  }

  RobotId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotId& from);
  void MergeFrom(const RobotId& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .Team team = 2;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 2;
  ::Team team() const;
  void set_team(::Team value);

  // @@protoc_insertion_point(class_scope:RobotId)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_team();
  void clear_has_team();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 id_;
  int team_;
  friend struct ::protobuf_ssl_5fgc_5fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RobotId

// optional uint32 id = 1;
inline bool RobotId::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotId::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotId::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotId::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RobotId::id() const {
  // @@protoc_insertion_point(field_get:RobotId.id)
  return id_;
}
inline void RobotId::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RobotId.id)
}

// optional .Team team = 2;
inline bool RobotId::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotId::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotId::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotId::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::Team RobotId::team() const {
  // @@protoc_insertion_point(field_get:RobotId.team)
  return static_cast< ::Team >(team_);
}
inline void RobotId::set_team(::Team value) {
  assert(::Team_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:RobotId.team)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Team> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Team>() {
  return ::Team_descriptor();
}
template <> struct is_proto_enum< ::Division> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Division>() {
  return ::Division_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ssl_5fgc_5fcommon_2eproto
